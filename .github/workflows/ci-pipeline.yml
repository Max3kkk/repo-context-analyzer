name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-run-scripts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    
    - name: Create necessary directories
      run: |
        mkdir -p data

    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4 pyyaml tqdm dockerfile-parse
    
    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

    - name: Run scripts
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
      run: |
        python parse_images.py
        python image_hierarchy.py
        python image_info.py
        python language_ident.py
        python syft_check.py
        python dependency_reader.py
        python stig_parser.py

    - name: Upload result file
      uses: actions/upload-artifact@v2
      with:
        name: used-stigs
        path: data/used_stigs.json

  create-pr-message:
    needs: build-and-run-scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: used-stigs
          path: data

      - name: Comment on Pull Request
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = 'data/used_stigs.json';
            const data = fs.readFileSync(path, 'utf8');
            const issue_number = process.env.GITHUB_REF.split('/').pop();
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: `### Updated STIG Information\n\`\`\`json\n${data}\n\`\`\``
            });